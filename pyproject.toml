[project]
name = "wallbox-control"
version = "0.1.0"
description = "A Python library for controlling wallboxes via Modbus RTU communication protocol"
readme = "README.md"
requires-python = ">=3.11, <3.12"
dependencies = [
    "fastapi>=0.117.1",
    "gpiozero>=2.0.1",
    "minimalmodbus>=2.1.1",
    "rpi-lgpio>=0.6",
    "uvicorn>=0.37.0",
]
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["wallbox", "modbus", "ev-charging", "electric-vehicle"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[dependency-groups]
dev = [
    "ruff>=0.13.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=main",
    "--cov-report=term-missing",
    "--cov-report=html",
]
